name: ESLint, Build, and Coverage

on:
  push:
    branches:
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'v21.1.0'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: |
          chmod +x node_modules/.bin/eslint
          ./node_modules/.bin/eslint --ext .ts .


  build:
    runs-on: ubuntu-latest
    needs: [lint]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'v21.1.0'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build


  test-and-coverage:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'v21.1.0'

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: npm run coverage
 
      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage

  push-to-docker:
    runs-on: ubuntu-latest
    needs: [test-and-coverage]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # No necesitas construir la imagen aqu√≠, ya que la has construido localmente

      - name: Tag Docker image
        run: docker tag robertclaros:project_app robertclaros/project_app:appimage
             
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Push Docker image
        run: docker push robertclaros/project_app:latest

