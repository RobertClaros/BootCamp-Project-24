name: ESLint, Test, Build, and Coverage

on:
  push:
    branches:
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'v21.1.0'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: |
          chmod +x node_modules/.bin/eslint
          ./node_modules/.bin/eslint --ext .ts .

  test-and-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'v21.1.0'

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: npm run coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage

      - name: Calculate coverage percentage
        id: calculate-coverage
        run: echo "::set-output name=coverage-percent::$(awk -F'[:]' '/^Statements/ {print $2}' coverage/lcov.info)"

  push-to-docker-compose:
    runs-on: ubuntu-latest
  
    needs: [build]
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
  
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
  
      - name: Run Docker Compose
        run: |
          docker-compose up -d

  build:
    runs-on: ubuntu-latest

    needs: [test-and-coverage]

    if: "${{ needs.test-and-coverage.outputs.coverage-percent }} < 70" 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'v21.1.0'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

  push-to-docker:
    runs-on: ubuntu-latest

    needs: [build, push-to-docker-compose]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: docker push robertclaros/project_app:latest
